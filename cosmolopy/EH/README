=================================
Eisenstein & Hu Fitting functions
=================================

Power spectra for CDM variants without baryonic effects
=======================================================

Original c code
---------------

power.c is redistributed under the MIT License with the permission of
Wayne Hu

http://background.uchicago.edu/~whu/transfer/transferpage.html

and is described in Eisenstein, D. J., & Hu, W. "Power Spectra for
Cold Dark Matter and Its Variants," 1999, ApJ, 511, 5
[astro-ph/9710252]. Please cite this paper to acknowledge use of power
spectrum calculations.

See LISCENSE file.

Python Interface
----------------

These notes are by Roban Kramer.

I use swig to generate the python interface to `power.c`.

`power_wrap.c` and `power.py` are created from `power.i` and `power.c`
by runing:

 > swig -python power.i

I used to let distutils run swig, but that stopped working for some
reason. The code was:

  power_module = Extension('cosmolopy.EH._power',
  sources=[os.path.join(eh_dir, 'power.i'), os.path.join(eh_dir,
  'power.c')])

I still let distutils do the compiling to create `_power.so`. This has
the advantage of not requiring the user to install swig.

Power spectra with baryonic effects
===================================

Original Fortran code
---------------------

tf_fit.f is redistributed under the MIT License

http://background.uchicago.edu/~whu/transfer/transferpage.html

and is described in Eisenstein, D. J., & Hu, W. "Baryonic Features in 
the Matter Transfer Function," 1998, ApJ, 496, 605
[astro-ph/9709112]. Please cite this paper to acknowledge use of power
spectrum calculations.

See LISCENSE file.

Python interface
----------------

These notes are by Berian James.

I use f2py to wrap tf_fit.f into a python module. This requires modifying
the original fortran code only to indicate which arguments of the subroutines
are inputs and which are outputs. These modifications can be spotted in the
source code by the identifier 'cf2py' at the start of the line. They are
treated as comments by fortran compilers